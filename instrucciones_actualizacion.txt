# ===================================================================
# ACTUALIZACI√ìN PARA interpretar_con_gpt() 
# ===================================================================

# A√±adir estas nuevas acciones a la lista:
# - eliminar_linea (requiere "nombre" del proyecto)
# - imputar_horas_dia (ahora acepta "modo": "sumar" o "establecer")

# Nuevas reglas para el prompt:

"""
Acciones v√°lidas:
- seleccionar_fecha (requiere "fecha" en formato YYYY-MM-DD)
- volver
- seleccionar_proyecto (requiere "nombre")
- imputar_horas_dia (requiere "dia", "horas" y opcionalmente "modo": "sumar" o "establecer")
- imputar_horas_semana
- eliminar_linea (requiere "nombre" del proyecto a eliminar)
- iniciar_jornada
- finalizar_jornada
- guardar_linea
- emitir_linea

Reglas IMPORTANTES:
üîü Si dice "totales", "establece", "pon exactamente", "cambia a", "reemplaza por":
   ‚Üí usar modo "establecer" en imputar_horas_dia
   Ejemplo: {{"accion": "imputar_horas_dia", "parametros": {{"dia": "jueves", "horas": 2, "modo": "establecer"}}}}

üîü Si dice "a√±ade", "suma", "agrega" (o no menciona nada espec√≠fico):
   ‚Üí usar modo "sumar" (o no especificar modo, es el default)

üîü Si dice "borra la l√≠nea", "elimina el proyecto", "quita la l√≠nea":
   ‚Üí usar accion "eliminar_linea" con el nombre del proyecto
   Ejemplo: {{"accion": "eliminar_linea", "parametros": {{"nombre": "Desarrollo"}}}}
"""

# ===================================================================
# ACTUALIZACI√ìN PARA ejecutar_accion()
# ===================================================================

# A√±adir en ejecutar_accion() estos casos:

"""
    # üóëÔ∏è Eliminar l√≠nea de proyecto
    elif accion == "eliminar_linea":
        try:
            nombre = orden["parametros"].get("nombre")
            return eliminar_linea_proyecto(driver, wait, nombre)
        except Exception as e:
            return f"Error eliminando l√≠nea: {e}"

    # ‚è±Ô∏è Imputar horas del d√≠a (ACTUALIZAR el caso existente)
    elif accion == "imputar_horas_dia":
        try:
            dia_param = orden["parametros"].get("dia")
            horas = float(orden["parametros"].get("horas", 0))
            modo = orden["parametros"].get("modo", "sumar")  # ‚Üê NUEVO
            fila = contexto.get("fila_actual")
            proyecto = contexto.get("proyecto_actual", "Desconocido")

            if not fila:
                return "Necesito que primero selecciones un proyecto antes de imputar horas"

            # Si GPT devuelve una fecha ISO ‚Üí convertir a nombre de d√≠a
            try:
                fecha_obj = datetime.fromisoformat(dia_param)
                dia = fecha_obj.strftime("%A").lower()
                dias_map = {
                    "monday": "lunes",
                    "tuesday": "martes",
                    "wednesday": "mi√©rcoles",
                    "thursday": "jueves",
                    "friday": "viernes"
                }
                dia = dias_map.get(dia, dia)
            except Exception:
                dia = dia_param.lower()

            return imputar_horas_dia_mejorada(driver, wait, dia, horas, fila, proyecto, modo)  # ‚Üê ACTUALIZADO

        except Exception as e:
            return f"Error al imputar horas: {e}"
"""
